{"version":3,"file":"sw.js","sources":["../src/promise-helpers.ts","../src/image-db.ts","../src/constants.ts","../src/pubsub.ts","../src/sync/auth.ts","../src/sync/google-drive.ts","../src/sync/sync.ts","../src/service-worker/sw.ts"],"sourcesContent":["/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nexport function dataUrlToArrayBuffer(dataURI: string): ArrayBuffer {\n  const byteString = atob(dataURI.split(',')[1]);\n  const ia = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n  }\n  return ia.buffer as ArrayBuffer;\n}\n\nexport async function canvasToBlob(canvas: HTMLCanvasElement, type: string): Promise<Blob> {\n  if (canvas.toBlob) {\n    const result: Promise<Blob> = new Promise((resolve) => {\n      canvas.toBlob((blob: Blob) => resolve(blob), type);\n    });\n    return result;\n  } else {\n    const dataURL = canvas.toDataURL(type);\n    const buffer = dataUrlToArrayBuffer(dataURL);\n    return new Blob([buffer], {type});\n  }\n}\n\nexport function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', async (e: ProgressEvent) => {\n      resolve(reader.result);\n    });\n    reader.addEventListener('error', reject);\n    reader.readAsArrayBuffer(blob);\n  });\n}\n","/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport {blobToArrayBuffer} from './promise-helpers';\n\nconst DB_VERSION = 4;\n\nexport interface IListRecord {\n  id: number | null;\n  guid: string;\n\n  originalId: number | null;\n  editedId: number | null;\n  thumbnailId: number | null;\n\n  transform: INumDict | null;\n\n  localFilterChanges: boolean;\n  localImageChanges: boolean;\n  lastSyncVersion: number;\n}\n\ninterface IMediaRecord {\n  media: ArrayBuffer;\n  type: string;\n}\n\nexport interface ISyncRecord {\n  id: number;\n  guid: string;\n  upload: boolean;\n  includeMedia: boolean;\n}\n\nclass ImageDB {\n  private dbPromise: Promise<IDBDatabase>;\n  private dbResolve: (value: IDBDatabase) => void;\n  private dbReject: (reason: any) => void;\n\n  constructor() {\n    const request = indexedDB.open('image-db', DB_VERSION);\n\n    this.dbPromise = new Promise((resolve, reject) => {\n      this.dbResolve = resolve;\n      this.dbReject = reject;\n\n      request.onerror = (reason) => this.dbReject(reason);\n      request.onupgradeneeded = (event) => this.createObjectStore(event);\n      request.onsuccess = (event) => this.dbOpened(request);\n    });\n  }\n\n  /**\n   * Store an image record in the database. If the `id` property of the\n   * record is not set, this will create a new entry. Returns the ID of the\n   * record.\n   */\n  storeRecord(record: IListRecord): Promise<number> {\n    if (record.id === null) {\n      delete record.id;\n    }\n    const promise: Promise<number> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['list'], 'readwrite');\n        const put = transaction.objectStore('list').put(record);\n\n        put.onsuccess = (event) => resolve(put.result);\n        put.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  retrieveRecord(id: number): Promise<IListRecord> {\n    const promise: Promise<IListRecord> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['list'], 'readonly');\n        const get = transaction.objectStore('list').get(id);\n\n        get.onsuccess = (event) => resolve(get.result);\n        get.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  deleteRecord(id: number, mediaIds: number[] = []): Promise<void> {\n    const promise: Promise<void> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['list', 'media'], 'readwrite');\n\n        for (const mediaId of mediaIds) {\n          transaction.objectStore('media').delete(mediaId);\n        }\n        transaction.objectStore('list').delete(id);\n\n        transaction.oncomplete = () => resolve();\n        transaction.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  async storeMedia(media: Blob, id?: number): Promise<number> {\n    const buffer = await blobToArrayBuffer(media);\n    const record = {\n      media: buffer,\n      type: media.type,\n    };\n    const promise: Promise<number> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['media'], 'readwrite');\n        const put = transaction.objectStore('media').put(record, id);\n\n        put.onsuccess = (event) => resolve(put.result);\n        put.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  retrieveMedia(id: number): Promise<Blob> {\n    const promise: Promise<Blob> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['media'], 'readonly');\n        const get = transaction.objectStore('media').get(id);\n\n        get.onsuccess = (event) => {\n          const record = get.result as IMediaRecord;\n          const blob = new Blob([record.media], {type: record.type});\n          resolve(blob);\n        };\n        get.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  addSync(data: ISyncRecord): Promise<void> {\n    const promise: Promise<void> = new Promise((resolve, reject) => {\n      if (!data.id && !data.guid) {\n        return reject('Neither local nor remote id was given');\n      }\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['sync'], 'readwrite');\n        const put = transaction.objectStore('sync').put(data);\n        put.onsuccess = () => resolve();\n        put.onerror = reject;\n      }).catch(reject);\n    });\n    return promise;\n  }\n\n  removeSync(id: number, guid: string): Promise<void> {\n    const promise: Promise<void> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        if (!id && !guid) {\n          return reject('Neither local nor remote id was given');\n        }\n        const key: IDBArrayKey = [id, guid];\n        const transaction = db.transaction(['sync'], 'readwrite');\n        transaction.objectStore('sync').delete(key);\n        transaction.oncomplete = () => resolve();\n        transaction.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  listSync(): Promise<ISyncRecord[]> {\n    const promise: Promise<ISyncRecord[]> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['sync'], 'readonly');\n        const open = transaction.objectStore('sync').openCursor();\n        const results: ISyncRecord[] = [];\n\n        open.onsuccess = (event) => {\n          const cursor = open.result as IDBCursorWithValue;\n\n          if (cursor) {\n            results.push(cursor.value);\n            cursor.continue();\n          } else {\n            resolve(results);\n          }\n        };\n        open.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  setMeta(key: string, value: any): Promise<void> {\n    const promise: Promise<void> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['metadata'], 'readwrite');\n        const put = transaction.objectStore('metadata').put(value, key);\n        put.onsuccess = () => resolve();\n        put.onerror = reject;\n      }).catch(reject);\n    });\n    return promise;\n  }\n\n  getMeta(key: string): Promise<any> {\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['metadata'], 'readonly');\n        const get = transaction.objectStore('metadata').get(key);\n        get.onsuccess = () => resolve(get.result);\n        get.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  all(): Promise<IListRecord[]> {\n    const promise: Promise<IListRecord[]> = new Promise((resolve, reject) => {\n      this.dbPromise.then((db) => {\n        const transaction = db.transaction(['list'], 'readonly');\n        const open = transaction.objectStore('list').openCursor();\n        const results: IListRecord[] = [];\n\n        open.onsuccess = (event) => {\n          const cursor = open.result as IDBCursorWithValue;\n\n          if (cursor) {\n            results.push(cursor.value);\n            cursor.continue();\n          } else {\n            resolve(results);\n          }\n        };\n        open.onerror = reject;\n      }).catch(reject);\n    });\n\n    return promise;\n  }\n\n  private dbOpened(request: IDBOpenDBRequest) {\n    this.dbResolve(request.result);\n    this.dbPromise.then((db) => {\n      db.onerror = (reason) => this.error(reason);\n    });\n  }\n\n  private error(reason: Event) {\n    console.error(reason);\n  }\n\n  private createObjectStore(event: IDBVersionChangeEvent) {\n    const request: IDBOpenDBRequest = event.target as IDBOpenDBRequest;\n    const db: IDBDatabase = request.result;\n\n    if (event.oldVersion < 3) {\n      if (event.oldVersion !== 0) {\n        db.deleteObjectStore('images');\n      }\n\n      db.createObjectStore('media', {autoIncrement: true});\n      db.createObjectStore('list', {keyPath: 'id', autoIncrement: true});\n    }\n\n    if (event.oldVersion < 4) {\n      db.createObjectStore('metadata');\n      db.createObjectStore('sync', {keyPath: ['id', 'guid']});\n    }\n  }\n}\n\nexport const imageDB = new ImageDB();\n","/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nexport default {\n  CLIENT_ID: '151109002640-6hsca3c8lv5eutorkavk157rle1rjsgt.apps.googleusercontent.com',\n  DRIVE_FOLDER: 'Snapshot Photos',\n  IMAGE_TYPE: 'image/jpeg',\n  SUPPORTS_BGSYNC: 'SyncManager' in self,\n  SUPPORTS_IMAGE_CAPTURE: 'ImageCapture' in self,\n  SUPPORTS_MEDIA_DEVICES: 'mediaDevices' in navigator,\n  SYNC_FREQUENCY: 60000, // in milliseconds\n};\n","/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\ninterface IAction {\n  channel: string;\n  data?: any;\n}\n\ntype Handler = (action: IAction) => void;\n\nconst subscribers: Map<string, Set<Handler>> = new Map();\n\nconst pubsub = {\n  publish(action: IAction) {\n    if (subscribers.has(action.channel)) {\n      const handlers = subscribers.get(action.channel)!;\n      console.log(`[PUBSUB] ${action.channel}: ${handlers.size} handlers`);\n      for (const handler of handlers) {\n        handler(action);\n      }\n    }\n  },\n\n  subscribe(channel: string, handler: Handler) {\n    if (!subscribers.has(channel)) {\n      subscribers.set(channel, new Set());\n    }\n    subscribers.get(channel)!.add(handler);\n  },\n\n  unsubscribe(channel: string, handler: Handler) {\n    if (subscribers.has(channel)) {\n      const handlers = subscribers.get(channel)!;\n      if (handlers.has(handler)) {\n        handlers.delete(handler);\n      }\n    }\n  },\n};\n\nif (navigator.serviceWorker) {\n  navigator.serviceWorker.addEventListener('message', (event) => {\n    pubsub.publish(event.data);\n  });\n}\nexport default pubsub;\n","/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport constants from '../constants';\nimport {imageDB} from '../image-db';\nimport pubsub from '../pubsub';\n\nclass User {\n  id: string = '';\n  name: string = '';\n  imageURL: string = '';\n  token: string = '';\n  tokenExpiry: number = 0;\n}\n\nexport const user: User = new User();\n\nexport async function resume() {\n  const storedToken: string = await imageDB.getMeta('token');\n  const storedExpiry: number = await imageDB.getMeta('tokenExpiry');\n  if (storedToken && (storedExpiry * 1000) > Date.now()) {\n    return validate(storedToken);\n  }\n}\n\nexport function login() {\n  const url = new URL('https://accounts.google.com/o/oauth2/v2/auth');\n  url.searchParams.append('client_id', constants.CLIENT_ID);\n  url.searchParams.append('redirect_uri', `${location.origin}/oauth`);\n  url.searchParams.append('response_type', 'token');\n  url.searchParams.append('scope', 'profile https://www.googleapis.com/auth/drive');\n  window.location.replace(url.toString());\n}\n\nexport function logout() {\n  user.token = '';\n  pubsub.publish({channel: 'logout'});\n  imageDB.setMeta('token', '');\n  imageDB.setMeta('tokenExpiry', 0);\n}\n\nexport async function validate(accessToken: string): Promise<void> {\n  if (accessToken === '') {\n    return;\n  }\n  const response = await fetch(`https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=${accessToken}`);\n  if (!response.ok) {\n    user.token = '';\n    return;\n  }\n  const json = await response.json();\n  if (json.aud === constants.CLIENT_ID) {\n    const profileResponse = await fetch(`https://www.googleapis.com/plus/v1/people/me?access_token=${accessToken}`);\n    const profile = await profileResponse.json();\n    user.id = profile.id;\n    user.name = profile.displayName;\n    user.imageURL = profile.image.url;\n    user.token = accessToken;\n    user.tokenExpiry = json.exp;\n    setTimeout(logout, json.expires_in * 1000);\n    pubsub.publish({channel: 'login'});\n    await imageDB.setMeta('token', accessToken);\n    await imageDB.setMeta('tokenExpiry', json.exp);\n  }\n}\n","/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport {user} from './auth';\n\nconst DRIVE_API = 'https://www.googleapis.com/drive/v3/';\nconst DRIVE_UPLOAD_API = 'https://www.googleapis.com/upload/drive/v3/';\nconst COMMON_FILE_FIELDS = 'kind,id,name,mimeType,appProperties,trashed,version,size';\n\nfunction makeURL(base: string, defaults: IStringDict, options?: IStringDict): string {\n  const url = new URL(base);\n  for (const key in defaults) {\n    url.searchParams.append(key, defaults[key]);\n  }\n  if (options) {\n    for (const key in options) {\n      url.searchParams.append(key, options[key]);\n    }\n  }\n  return url.toString();\n}\n\nexport async function driveRequest(endpoint: string, options?: IStringDict, init: RequestInit = {}) {\n  if (!user.token) {\n    throw new Error('Not logged in');\n  }\n  const url = makeURL(`${DRIVE_API}${endpoint}`, {\n    access_token: user.token,\n  }, options);\n  const response = await fetch(url, init);\n  return response.json();\n}\n\nasync function driveMediaRequest(endpoint: string, options?: IStringDict, init: RequestInit = {}) {\n  if (!user.token) {\n    throw new Error('Not logged in');\n  }\n  const url = makeURL(`${DRIVE_API}${endpoint}`, {\n    access_token: user.token,\n    alt: 'media',\n  }, options);\n  const response = await fetch(url, init);\n  return response.blob();\n}\n\nasync function driveUploadRequest(endpoint: string, body: Blob) {\n  if (!user.token) {\n    throw new Error('Not logged in');\n  }\n  const url = makeURL(`${DRIVE_UPLOAD_API}${endpoint}`, {\n    access_token: user.token,\n    uploadType: 'media',\n  });\n  const response = await fetch(url, {method: 'PATCH', body});\n  return response.json();\n}\n\nexport async function getFileMeta(fileId: string): Promise<DriveFile> {\n  return driveRequest(`files/${fileId}`, {fields: COMMON_FILE_FIELDS});\n}\n\nexport async function getFileContent(fileId: string): Promise<Blob | null> {\n  return driveMediaRequest(`files/${fileId}`);\n}\n\nexport async function createFileMeta(file: DriveFile): Promise<DriveFile> {\n  return driveRequest(`files`, {fields: COMMON_FILE_FIELDS}, {\n    body: JSON.stringify(file),\n    headers: {'Content-Type': 'application/json'},\n    method: 'POST',\n  });\n}\n\nexport async function updateFileMeta(file: DriveFile): Promise<DriveFile> {\n  // Only certain fields get written\n  const body: DriveFile = {\n    appProperties: file.appProperties,\n    mimeType: file.mimeType,\n    name: file.name,\n  };\n  return driveRequest(`files/${file.id}`, {fields: COMMON_FILE_FIELDS}, {\n    body: JSON.stringify(body),\n    headers: {'Content-Type': 'application/json'},\n    method: 'PATCH',\n  });\n}\n\nexport async function updateFileContent(fileId: string, body: Blob): Promise<DriveFile> {\n  return driveUploadRequest(`files/${fileId}`, body);\n}\n\nexport async function folderList(folderId: string): Promise<DriveFile[]> {\n  let result: DriveFile[] = [];\n  const request: IStringDict = {\n    corpus: 'user',\n    fields: `files(${COMMON_FILE_FIELDS})`,\n    q: `'${folderId}' in parents`,\n    spaces: 'drive',\n  };\n  let nextPageToken: string = '';\n\n  do {\n    if (nextPageToken) {\n      request.nextPageToken = nextPageToken;\n    }\n    const list: DriveFileList = await driveRequest('files', request);\n    result = result.concat(list.files);\n    nextPageToken = list.nextPageToken;\n  } while (nextPageToken);\n\n  return result;\n}\n","/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n/*\n  NOTE: This file gets included by the service worker. To prevent the service\n  worker from transitively including a lot of code (particularly around WebGL)\n  that it doesn't really need, this file does NOT use the ImageRecord or\n  FilterTransform wrapper classes. It directly uses the database features\n  instead.\n\n  TODO: In the future it might be nice to make the split at a higher level of\n  abstraction, like having a service worker friendly `BaseImageRecord` or\n  something.\n*/\n\nimport constants from '../constants';\nimport {IListRecord, imageDB} from '../image-db';\nimport pubsub from '../pubsub';\nimport {user} from './auth';\nimport {createFileMeta, driveRequest, folderList, getFileContent,\n  updateFileContent, updateFileMeta} from './google-drive';\n\nlet snapshotFolder: DriveFile | null = null;\n\nexport enum ChangeType {\n  ADD,\n  REMOVE,\n  UPDATE,\n}\n\nexport interface IChangeEvent {\n  type: ChangeType;\n  id: number;\n}\n\n/*\n  # Structure of the drive folder\n\n  The drive folder backs up only two things - original photos and the filter\n  options. The filter is stored as app specific metadata inside the file. See\n  https://developers.google.com/drive/v3/reference/files#appProperties\n\n  So each image in the app is a single uploaded file. The edited/thumbnail\n  versions are created in-app (for now - video filtering may require some\n  sort of cloud-based process.)\n*/\n\nfunction syncStart() {\n  syncFiles();\n  setInterval(syncFiles, constants.SYNC_FREQUENCY + 1000);\n}\n\n// Don't want to start trying to sync from inside the service worker\nif ('window' in self) {\n  pubsub.subscribe('login', syncStart);\n}\n\nexport async function getSnapshotFolder(): Promise<DriveFile> {\n  if (snapshotFolder) {\n    return snapshotFolder;\n  }\n\n  const files: DriveFileList = await driveRequest('files', {\n    corpus: 'user',\n    q: `name = '${constants.DRIVE_FOLDER}' and 'root' in parents`,\n    spaces: 'drive',\n  });\n  if (files && files.files.length === 1) {\n    snapshotFolder = files.files[0];\n    return snapshotFolder;\n  }\n\n  // Folder doesn't exist, create it\n  const bodyOptions: DriveFile = {\n    mimeType: 'application/vnd.google-apps.folder',\n    name: constants.DRIVE_FOLDER,\n    parents: ['root'],\n  };\n  snapshotFolder = await createFileMeta(bodyOptions) as DriveFile;\n  return snapshotFolder;\n}\n\nexport async function syncFiles() {\n  if (!user.token) {\n    return;\n  }\n  const lastSyncTime: number = Number(await imageDB.getMeta('lastSyncTime'));\n  if (lastSyncTime + constants.SYNC_FREQUENCY > Date.now()) {\n    return;\n  }\n\n  let registration: ServiceWorkerRegistration | undefined;\n  if (constants.SUPPORTS_BGSYNC) {\n    registration = await navigator.serviceWorker.getRegistration();\n  }\n\n  // Get the remote list of files\n  const folder = await getSnapshotFolder();\n  const files = await folderList(folder.id!);\n  const remoteOnly: Map<string, DriveFile> = new Map();\n  const localOnly: Set<IListRecord> = new Set();\n  const links: Map<DriveFile, IListRecord> = new Map();\n  for (const file of files) {\n    if (!file.id) {\n      continue;\n    }\n    remoteOnly.set(file.id, file);\n  }\n  for (const record of await imageDB.all()) {\n    if (remoteOnly.has(record.guid)) {\n      links.set(remoteOnly.get(record.guid)!, record);\n      remoteOnly.delete(record.guid);\n    } else {\n      localOnly.add(record);\n    }\n  }\n\n  if (registration) {\n    // Going to use background sync\n    for (const remote of remoteOnly.values()) {\n      if (remote.trashed) {\n        continue;\n      }\n      imageDB.addSync({id: 0, guid: remote.id!, upload: false, includeMedia: true});\n    }\n\n    for (const local of localOnly) {\n      imageDB.addSync({id: local.id!, guid: '', upload: true, includeMedia: true});\n    }\n\n    for (const [remote, local] of links) {\n      if (remote.trashed) {\n        // Remote was deleted, delete local too\n        pubsub.publish({channel: 'sync', data: {type: ChangeType.REMOVE, id: local.id!}});\n        deleteLocal(local);\n      } else if (local.localFilterChanges || local.localImageChanges) {\n        imageDB.addSync({\n          guid: remote.id!,\n          id: local.id!,\n          includeMedia: local.localImageChanges,\n          upload: true,\n        });\n      } else if (local.lastSyncVersion < remote.version!) {\n        imageDB.addSync({id: local.id!, guid: remote.id!, upload: false, includeMedia: true});\n      }\n    }\n\n    registration.sync.register('sync');\n  } else {\n    // Using direct download\n    for (const remote of remoteOnly.values()) {\n      if (remote.trashed) {\n        continue;\n      }\n      downloadRemote(remote, true);\n    }\n\n    // Upload local only\n    for (const local of localOnly) {\n      uploadLocal(local, local.localImageChanges);\n    }\n\n    for (const [remote, local] of links) {\n      if (remote.trashed) {\n        // Remote was deleted, delete local too\n        pubsub.publish({channel: 'sync', data: {type: ChangeType.REMOVE, id: local.id!}});\n        deleteLocal(local);\n      } else if (local.localImageChanges || local.localFilterChanges) {\n        uploadLocal(local, local.localImageChanges, remote);\n      } else if (local.lastSyncVersion < remote.version!) {\n        downloadRemote(remote, true, local);\n      }\n    }\n  }\n\n  imageDB.setMeta('lastSyncTime', Date.now());\n}\n\nexport async function deleteLocal(local: IListRecord) {\n  const mediaIds: number[] = [];\n  if (local.originalId) {\n    mediaIds.push(local.originalId);\n  }\n  if (local.editedId) {\n    mediaIds.push(local.editedId);\n  }\n  if (local.thumbnailId) {\n    mediaIds.push(local.thumbnailId);\n  }\n  imageDB.deleteRecord(local.id!, mediaIds);\n}\n\nexport async function\ndownloadRemote(remote: DriveFile, includeMedia: boolean, local?: IListRecord): Promise<number | undefined> {\n  if (!remote.id) {\n    return;\n  }\n  // TODO: Only download the media if it actually changed - this function would\n  // be called for a simple filter change, too.\n  const original = await getFileContent(remote.id);\n\n  if (original) {\n    const record: IListRecord = local || {\n      editedId: null,\n      guid: '',\n      id: null,\n      lastSyncVersion: -1,\n      localFilterChanges: false,\n      localImageChanges: false,\n      originalId: null,\n      thumbnailId: null,\n      transform: {},\n    };\n    record.guid = remote.id;\n\n    if (remote.appProperties) {\n      const data = remote.appProperties;\n      const transform = record.transform || {};\n      transform.saturation = Number(data.saturation) || transform.saturation;\n      transform.warmth = Number(data.warmth) || transform.warmth;\n      transform.sharpen = Number(data.sharpen) || transform.sharpen;\n      transform.blur = Number(data.blur) || transform.blur;\n      transform.brightness = Number(data.brightness) || transform.brightness;\n      transform.contrast = Number(data.contrast) || transform.contrast;\n      transform.grey = Number(data.grey) || transform.grey;\n      transform.vignette = Number(data.vignette) || transform.vignette;\n      record.transform = transform;\n    }\n\n    record.localFilterChanges = false;\n    record.localImageChanges = false;\n    record.lastSyncVersion = remote.version!;\n    record.originalId = await imageDB.storeMedia(original);\n    await imageDB.storeRecord(record);\n    pubsub.publish({channel: 'sync', data: {type: ChangeType.ADD, id: record.id!}});\n    return record.id!;\n  } else {\n    console.log(`Could not fetch original image`);\n  }\n  return;\n}\n\nexport async function uploadLocal(local: IListRecord, includeMedia: boolean, remote?: DriveFile) {\n  if (!local.originalId) {\n    return;\n  }\n  const original = await imageDB.retrieveMedia(local.originalId);\n  if (!original) {\n    return;\n  }\n\n  if (!remote) {\n    const parent = await getSnapshotFolder();\n\n    if (!parent || !parent.id) {\n      return;\n    }\n\n    // Create the file record\n    remote = {\n      mimeType: original.type,\n      name: `${local.id}_${Date.now()}`,\n      parents: [parent.id],\n    };\n  }\n\n  // Set the metadata to be the transform values\n  if (local.transform) {\n    remote.appProperties = {};\n    for (const key in local.transform) {\n      remote.appProperties[key] = String(local.transform[key]);\n    }\n  }\n\n  if (remote.id) {\n    const result = await updateFileMeta(remote);\n    local.lastSyncVersion = result.version!;\n  } else {\n    const file = await createFileMeta(remote);\n    if (!file.id) {\n      return;\n    }\n    remote.id = file.id;\n    local.guid = file.id;\n  }\n\n  if (includeMedia) {\n    // Upload the data\n    const updated = await updateFileContent(remote.id, original);\n    local.lastSyncVersion = updated.version!;\n    local.localImageChanges = false;\n  }\n  local.localFilterChanges = false;\n  return imageDB.storeRecord(local);\n}\n","/*\n  Copyright 2017 Google Inc. All Rights Reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n// These two lines are here to stop TypeScript from complaining about service\n// worker APIs\nconst scope: ServiceWorkerGlobalScope = (self as any) as ServiceWorkerGlobalScope;\nconst {clients} = scope;\n\nimport {IListRecord, imageDB, ISyncRecord} from '../image-db';\nimport {resume} from '../sync/auth';\nimport {getFileMeta} from '../sync/google-drive';\nimport {ChangeType, downloadRemote, IChangeEvent, uploadLocal} from '../sync/sync';\n\nconst VERSION = 2;\nconsole.log(`SW Version ${VERSION}`);\n\nconst FILES = [\n  '/app.min.js',\n  '/index.html',\n  '/manifest.json',\n  '/favicon.ico',\n  '/icons/icon-512.png',\n];\n\nscope.addEventListener('install', (event: InstallEvent) => {\n  event.waitUntil(installHandler(event));\n});\n\nscope.addEventListener('activate', (event: ActivateEvent) => {\n  clients.claim();\n});\n\nscope.addEventListener('fetch', (event: FetchEvent) => {\n  event.respondWith(fetchHandler(event.request));\n});\n\nscope.addEventListener('sync', (event: SyncEvent) => {\n  event.waitUntil(syncHandler());\n});\n\nasync function installHandler(event: InstallEvent) {\n  const cache = await caches.open('snapshot');\n  cache.addAll(FILES);\n  scope.skipWaiting();\n}\n\nasync function fetchHandler(request: Request): Promise<Response> {\n  if (request.mode === 'navigate') {\n    const url = new URL(request.url);\n    if (url.origin === location.origin) {\n      request = new Request('/index.html');\n    }\n  }\n\n  if (request.method !== 'GET') {\n    return fetch(request);\n  }\n\n  if (request.url.match(/googleapis.com/)) {\n    return networkFirst(request);\n  }\n\n  return cacheFirst(request);\n}\n\nasync function cacheFirst(request: Request) {\n  const cache = await caches.open('snapshot');\n  const cacheResult = await cache.match(request);\n\n  if (cacheResult) {\n    return cacheResult;\n  }\n\n  const fetchResult = await fetch(request);\n  if (fetchResult.ok) {\n    cache.put(request, fetchResult.clone());\n  }\n  return fetchResult;\n}\n\nasync function networkFirst(request: Request) {\n  const cache = await caches.open('snapshot');\n\n  let fetchResult = await fetch(request);\n\n  try {\n    fetchResult = await fetch(request);\n  } catch (e) {\n    console.log(`Fetch error: ${e}`);\n  }\n\n  if (fetchResult) {\n    if (fetchResult.ok) {\n      cache.put(request, fetchResult.clone());\n    }\n    return fetchResult;\n  }\n\n  return cache.match(request);\n}\n\nasync function syncHandler() {\n  await resume();\n  const syncs = await imageDB.listSync();\n  for (const sync of syncs) {\n    doSync(sync);\n  }\n}\n\nasync function doSync(sync: ISyncRecord) {\n  // TODO: Need to somehow lock the sync record..? So that we don't add\n  // the item again during a sync, or upload the same thing twice\n  let local: IListRecord | undefined;\n  let remote: DriveFile | undefined;\n\n  if (sync.id) {\n    local = await imageDB.retrieveRecord(sync.id);\n  }\n\n  if (sync.guid) {\n    remote = await getFileMeta(sync.guid);\n  }\n\n  if (local && sync.upload) {\n    await uploadLocal(local, local.localImageChanges, remote);\n  } else if (remote && !sync.upload) {\n    const localId = await downloadRemote(remote, true, local);\n    if (localId) {\n      sendMessage({id: localId, type: ChangeType.ADD});\n    }\n  }\n  imageDB.removeSync(sync.id, sync.guid);\n}\n\nasync function sendMessage(change: IChangeEvent) {\n  const windows = await clients.matchAll({\n    includeUncontrolled: false,\n    type: 'window',\n  });\n  for (const client of windows) {\n    client.postMessage({channel: 'sync', data: change});\n  }\n}\n"],"names":["Promise","FileReader","addEventListener","result","readAsArrayBuffer","DB_VERSION","constructor","indexedDB","open","dbPromise","dbResolve","dbReject","onerror","onupgradeneeded","createObjectStore","onsuccess","dbOpened","storeRecord","id","then","transaction","objectStore","put","catch","retrieveRecord","get","deleteRecord","delete","oncomplete","storeMedia","blobToArrayBuffer","media","type","retrieveMedia","Blob","addSync","guid","removeSync","listSync","openCursor","push","value","continue","setMeta","getMeta","all","error","console","target","oldVersion","deleteObjectStore","autoIncrement","keyPath","imageDB","ImageDB","CLIENT_ID","DRIVE_FOLDER","IMAGE_TYPE","SUPPORTS_BGSYNC","self","SUPPORTS_IMAGE_CAPTURE","SUPPORTS_MEDIA_DEVICES","navigator","SYNC_FREQUENCY","subscribers","Map","pubsub","publish","has","channel","log","size","subscribe","set","Set","add","unsubscribe","serviceWorker","data","user","User","Date","now","validate","token","fetch","ok","json","aud","constants","name","displayName","imageURL","image","url","tokenExpiry","exp","setTimeout","logout","expires_in","DRIVE_API","DRIVE_UPLOAD_API","COMMON_FILE_FIELDS","URL","searchParams","append","toString","Error","makeURL","access_token","alt","blob","uploadType","method","body","driveRequest","fields","driveMediaRequest","JSON","stringify","headers","appProperties","mimeType","driveUploadRequest","corpus","q","spaces","nextPageToken","concat","files","snapshotFolder","ChangeType","syncFiles","setInterval","syncStart","length","parents","createFileMeta","getRegistration","getSnapshotFolder","folderList","values","trashed","upload","includeMedia","REMOVE","deleteLocal","localFilterChanges","localImageChanges","lastSyncVersion","version","sync","register","downloadRemote","uploadLocal","originalId","editedId","thumbnailId","getFileContent","transform","saturation","warmth","sharpen","blur","brightness","contrast","grey","vignette","ADD","updateFileMeta","updateFileContent","scope","clients","VERSION","FILES","waitUntil","installHandler","claim","respondWith","fetchHandler","request","syncHandler","caches","addAll","skipWaiting","mode","origin","location","Request","match","networkFirst","cacheFirst","clone","resume","doSync","getFileMeta","sendMessage","matchAll","includeUncontrolled","postMessage"],"mappings":"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"}